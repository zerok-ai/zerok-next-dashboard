{
    "scenario_title": "test",
    "scenario_type": "USER",
    "workloads": [
        {
            "service": "sock-shop/productcatalogservice",
            "executor": "OTEL",
            "trace_role": "server",
            "protocol": "GRPC",
            "rule": {
                "type": "rule_group",
                "condition": "AND",
                "rules": [
                    {
                        "type": "rule",
                        "id": "rpc_method",
                        "field": "RPC Method",
                        "input": "string",
                        "operator": "exists",
                        "value": "",
                        "datatype": "string"
                    },
                    {
                        "type": "rule",
                        "id": "rpc_system",
                        "field": "RPC System",
                        "input": "string",
                        "operator": "contains",
                        "value": "something",
                        "datatype": "string"
                    },
                    {
                        "type": "rule",
                        "id": "errors",
                        "field": "Errors",
                        "input": "bool",
                        "operator": "not_exists",
                        "value": "",
                        "datatype": "bool"
                    }
                ]
            }
        },
        {
            "service": "*/*",
            "executor": "OTEL",
            "trace_role": "server",
            "protocol": "HTTP",
            "rule": {
                "type": "rule_group",
                "condition": "AND",
                "rules": [
                    {
                        "type": "rule",
                        "id": "http_response_header",
                        "field": "Response Header",
                        "input": "string",
                        "operator": "begins_with",
                        "value": "this",
                        "datatype": "string",
                        "json_path": [
                            "req",
                            "body",
                            "something"
                        ]
                    },
                    {
                        "type": "rule",
                        "id": "latency_ns",
                        "field": "Latency",
                        "input": "duration",
                        "operator": "greater_than",
                        "value": "223",
                        "datatype": "integer"
                    },
                    {
                        "type": "rule",
                        "id": "http_request_header",
                        "field": "Request Header",
                        "input": "string",
                        "operator": "exists",
                        "value": "",
                        "datatype": "string"
                    }
                ]
            }
        }
    ],
    "group_by": [
        {
            "workload_index": 0,
            "title": "rpc_service",
            "hash": "rpc_service"
        },
        {
            "workload_index": 1,
            "title": "url_scheme",
            "hash": "url_scheme"
        }
    ],
    "rate_limit": [
        {
            "bucket_max_size": 10,
            "bucket_refill_size": 10,
            "tick_duration": "1m"
        }
    ]
}