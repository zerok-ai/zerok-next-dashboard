name: release
on:
  push:
    tags: #r/<CLUSTER-NAME>/<DOCKER-TAG-OR-VERSION>
      - 'r/**'
  workflow_dispatch:
    inputs:
      DOCKER_TAG:
        description: 'Docker Image Tag'
        required: true
        default: 'dev'
      GKE_CLUSTER:
        description: 'Cluster Name'
        required: true
        default: 'devcloud01'
      ENVIRONMENT: 
        description: 'Environment (poc or sandbox)'
        required: true
        default: 'poc'
      
env:
  NS: ${{ vars.NS }}
  DOCKER_TAG: ${{ github.event.inputs.DOCKER_TAG }}
  GKE_CLUSTER: ${{ github.event.inputs.GKE_CLUSTER }}
  GKE_SA_KEY: ${{ secrets.GKE_SA_KEY }}
  GKE_ZONE : ${{ vars.GKE_ZONE }}
  DOCKER_REG: ${{ vars.DOCKER_REG }}
  PROJECT_ID:  ${{ vars.PROJECT_ID }}
  DOCKER_REPO:  ${{ vars.DOCKER_REPO }}
  APP_NAME:  ${{ vars.APP_NAME }}
  BUILD_AND_PUSH: true
  DEPLOY: true

jobs:
  init:
    runs-on: zk-self-hosted
    outputs:
      CLUSTERNAME: ${{ steps.extractClusterInfo.outputs.TAG_CLUSTERNAME }}
      VERSION: ${{ steps.extractClusterInfo.outputs.TAG_VERSION }}
      ENVIRONMENT: ${{ steps.extractDomaindAndHost.outputs.ENVIRONMENT }}
      HOST_NAME: ${{ steps.extractDomaindAndHost.outputs.HOST_NAME }}
      DOMAIN_NAME: ${{ steps.extractDomaindAndHost.outputs.DOMAIN_NAME }}
    steps:
      - name: Set tag envt var
        run: |
          echo "GIT_TAG=${GITHUB_REF#refs/*/}" >> "$GITHUB_ENV"

      - name: Extract clusterName and version
        id: extractClusterInfo
        run: |
          if [ "$DOCKER_TAG" == "" ]; then
            part1=$(echo "$GIT_TAG" | cut -d'/' -f2)
            part2=$(echo "$GIT_TAG" | cut -d'/' -f3)
            echo "TAG_CLUSTERNAME=$part1" >> $GITHUB_OUTPUT
            echo "TAG_VERSION=$part2" >> $GITHUB_OUTPUT
            clusterName=$part1
          else
            echo "TAG_CLUSTERNAME=$GKE_CLUSTER" >> $GITHUB_OUTPUT
            echo "TAG_VERSION=$DOCKER_TAG" >> $GITHUB_OUTPUT
            clusterName=$GKE_CLUSTER
          fi
          TAG_CLUSTERNAME_CAPITAL=$(echo "$clusterName" | tr '[:lower:]' '[:upper:]')
          echo "TAG_CLUSTERNAME_CAPITAL=$TAG_CLUSTERNAME_CAPITAL" >> $GITHUB_OUTPUT

      - name: Set environment
        id: extractEnvironment
        run: |
          if [ "${{ github.event.inputs.environment }}" == "poc" ]; then
            ENVIRONMENT="poc"
            DOMAIN_NAME="getanton.com"
            HOST_NAME="dashboard.${{ github.event.inputs.GKE_CLUSTER }}.getanton.com"
          elif [ "${{ github.event.inputs.environment }}" == "sandbox" ]; then
            ENVIRONMENT="sandbox"
            DOMAIN_NAME="zerok.dev"
            HOST_NAME="sandbox.zerok.dev"
          else
            echo "Invalid environment"
            exit 1
          fi
          echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_OUTPUT

      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
  
  get-host:
    needs: init
    runs-on: zk-self-hosted
    env:
      ENVIRONMENT: ${{ needs.init.outputs.ENVIRONMENT }}
    environment:
      name: ${{ needs.init.outputs.ENVIRONMENT }}
    outputs:
      HOST_NAME: ${{ steps.extractHostName.outputs.HOST_NAME }}
    steps:
      - name: Extract host name
        id: extractHostName
        run: |
          if [ "$ENVIRONMENT" == "poc" ]; then
            HOST_NAME="dashboard.${{ needs.init.outputs.CLUSTERNAME }}.$DOMAIN_NAME"
          elif [ "$ENVIRONMENT" == "sandbox" ]; then
            HOST_NAME="sandbox.$DOMAIN_NAME"
          else
            echo "Invalid environment"
            exit 1
          fi
          echo "HOST_NAME=$HOST_NAME" >> $GITHUB_OUTPUT

  print-envs:
    needs: init
    runs-on: zk-self-hosted
    env:
      CLUSTERNAME: ${{ needs.init.outputs.CLUSTERNAME }}
      VERSION: ${{ needs.init.outputs.VERSION }}
      ENVIRONMENT: ${{ needs.init.outputs.ENVIRONMENT }}
      HOST_NAME: ${{ needs.get-host.outputs.HOST_NAME }}
    environment:
      name: ${{ needs.init.outputs.ENVIRONMENT }}
    steps:
      - name: Print environment vars
        run: |
          echo "GIT_TAG=$GIT_TAG"
          echo "CLUSTER_NAME=$CLUSTERNAME"
          echo "DOCKER_TAG=$VERSION"
          echo "GKE_ZONE=$GKE_ZONE"
          echo "DOCKER_REPO=$DOCKER_REPO"
          echo "K8S_NAMESPACE=$NS"
          echo "ENVIRONMENT=$ENVIRONMENT"
          echo "HOST_NAME=$HOST_NAME"

  ##############
  build-and-push:
    needs: init
    runs-on: zk-self-hosted
    env:
      CLUSTERNAME: ${{ needs.init.outputs.CLUSTERNAME }}
      VERSION: ${{ needs.init.outputs.VERSION }}
      ENVIRONMENT: ${{ needs.init.outputs.ENVIRONMENT }}
      HOST_NAME: ${{ needs.get-host.outputs.HOST_NAME }}
    environment:
      name: ${{ needs.init.outputs.ENVIRONMENT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download dependencies
        if: ${{ env.BUILD_AND_PUSH == 'true' }}
        run: yarn

      - name: Build
        if: ${{ env.BUILD_AND_PUSH == 'true' }}
        run: yarn build

      - name: Uploading Helm Charts (for deploy)
        uses: actions/upload-artifact@v3
        if: ${{ env.DEPLOY == 'true' }}
        with:
          name: helm-charts
          path: |
            helm-charts

      - name: Docker build
        if: ${{ env.BUILD_AND_PUSH == 'true' }}
        run: |-
          docker build  --tag "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/$APP_NAME:$GITHUB_SHA" .

      - name: Docker Tag
        if: ${{ env.BUILD_AND_PUSH == 'true' }}
        run: |-
          docker tag "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/$APP_NAME:$GITHUB_SHA" "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/$APP_NAME:$VERSION"

      - name: Docker push
        if: ${{ env.BUILD_AND_PUSH == 'true' }}
        run: |-
          docker push "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/$APP_NAME:$GITHUB_SHA"
          docker push "$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/$APP_NAME:$VERSION"

  deploy:
    needs: [ init,build-and-push ]
    env:
      CLUSTERNAME: ${{ needs.init.outputs.CLUSTERNAME }}
      VERSION: ${{ needs.init.outputs.VERSION }}
      ENV: ${{ needs.init.outputs.ENVIRONMENT }}
      HOST_NAME: ${{ needs.get-host.outputs.HOST_NAME }}
    environment:
      name: ${{ needs.init.outputs.ENVIRONMENT }}
    runs-on: zk-self-hosted
    steps:

      - id: 'auth'
        if: ${{ env.DEPLOY == 'true' }}
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ env.GKE_SA_KEY }}'

      - id: 'get-credentials'
        if: ${{ env.DEPLOY == 'true' }}
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: '${{ env.CLUSTERNAME }}'
          location: '${{ env.GKE_ZONE }}'

      - uses: actions/download-artifact@v3
        if: ${{ env.DEPLOY == 'true' }}
        with:
          name: helm-charts

      - name: Deploy
        if: ${{ env.DEPLOY == 'true' }}
        run: |-
          helm --install  \
          --set=image.repository=$DOCKER_REG/$PROJECT_ID/$DOCKER_REPO/$APP_NAME \
          --set=image.tag=$GITHUB_SHA \
          --set=global.host=$HOST_NAME \
          --set=global.domain=$DOMAIN_NAME \
          upgrade $APP_NAME \
           -f ./helm-charts/$ENV.yaml ./helm-charts/ \
           --create-namespace \
           --namespace $NS
